# Generated by Django 4.2.16 on 2024-11-30 13:16

from django.db import migrations, models
from django.db.migrations.state import StateApps
from django.db.models import F


def invert_is_manually_manageable(apps: StateApps, schema_editor):
    """Invert `is_manually_manageable`.

    This field is a renaming of `is_meta`.
    However, the meaning has been inverted : the groups
    which were meta are not manually manageable and vice versa.
    Thus, the value must be inverted.
    """
    Group = apps.get_model("core", "Group")
    Group.objects.all().update(is_manually_manageable=~F("is_manually_manageable"))


class Migration(migrations.Migration):
    dependencies = [("core", "0040_alter_user_options_user_user_permissions_and_more")]

    operations = [
        migrations.DeleteModel(
            name="MetaGroup",
        ),
        migrations.DeleteModel(
            name="RealGroup",
        ),
        migrations.AlterModelOptions(
            name="group",
            options={},
        ),
        migrations.RenameField(
            model_name="group",
            old_name="is_meta",
            new_name="is_manually_manageable",
        ),
        migrations.AlterField(
            model_name="group",
            name="is_manually_manageable",
            field=models.BooleanField(
                default=False,
                help_text="If False, this shouldn't be shown on group management pages",
                verbose_name="Is manually manageable",
            ),
        ),
        migrations.RunPython(
            invert_is_manually_manageable, reverse_code=invert_is_manually_manageable
        ),
    ]
